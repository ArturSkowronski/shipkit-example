apply plugin: "org.mockito.release-notes"
apply plugin: "org.mockito.release-tools.versioning"
apply from: "gradle/cd.gradle"

notes {
    releaseNotesFile = file("docs/release-notes.md")
    gitHubRepository = "mockito/mockito-release-tools-example"
    gitHubReadOnlyAuthToken = "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb" //read-only token
    gitHubLabelMapping = ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"]
}

ext {
    genericGitUserName = "Mockito Release Tools"
    genericGitUserEmail = "<mockito.release.tools@gmail.com>"
    gitHubUser = "szczepiq"
    releasableBranchRegex = "master|release/.+"  // matches 'master', 'release/2.x', 'release/3.x', etc.

    //TODO all properties, not only bintray_repo, need to be overridable using command line or project property
    bintray_repo = project.hasProperty('bintray_repo')? project.bintray_repo : 'mockito-release-tools-example-repo'
}

allprojects {
    plugins.withId("com.jfrog.bintray") {
        bintray {
            pkg {
                user = 'szczepiq'
                userOrg = 'mockito'
                name = 'mockito-release-tools-example'
                licenses = ['MIT']
                labels = ['continuous delivery', 'release automation', 'mockito']
            }
        }
    }
}

/*

TODO - is it a good idea to keep all configuration in a map?

+ can have custom validation if user has typo
+ easy to navigate to desired value
- no javadoc specific to configuration option
- harder to deprecate
- have to write code to parse map with validation

mockitoReleaseTools.settings = [
    gh_repository: "mockito/mockito-release-tools-example",
    gh_readOnlyAuthToken: "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb",
    gh_writeAuthTokenEnvName: "GH_WRITE_TOKEN",
    gh_user: "szczepiq",

    releaseNotes_file: file("docs/release-notes.md"),
    releaseNotes_labelMapping: ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"],

    git_genericUser:  "Mockito Release Tools",
    git_genericEmail: "<mockito.release.tools@gmail.com>",
    git_releasableBranchRegex: "master|release/.+",

    bintray_apiKeyEnvName: "BINTRAY_API_KEY",
    bintray_repo:
    bintray_notableRepo:
]

*/

//TODO (for consideration)
//apply plugin: "org.mockito.release-tools.continuous-delivery"
//continuousDelivery {
//    releaseNotesFile = file("docs/release-notes.md")
//    gitHubRepository = "mockito/mockito-release-tools-example"
//    gitHubReadOnlyAuthToken = "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb" //read-only token
//    gitHubLabelMapping = ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"]
//
//    genericGitUserName = "Mockito Release Tools"
//    genericGitUserEmail = "<mockito.release.tools@gmail.com>"
//    gitHubUser = "szczepiq"
//
// =
//    releasableBranchRegex = "master|release/.+"  // matches 'master', 'release/2.x', 'release/3.x', etc.
//}

//TODO (for consideration)
//apply plugin: "org.mockito.release-tools.release-notes"
//releaseNotes {
//    releaseNotesFile = file("docs/release-notes.md")
//    gitHubRepository = "mockito/mockito-release-tools-example"
//    gitHubReadOnlyAuthToken = "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb" //read-only token
//    gitHubLabelMapping = ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"]
//}