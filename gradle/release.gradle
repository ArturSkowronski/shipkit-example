apply plugin: "org.mockito.mockito-release-tools.continuous-delivery"

ext {
    gh_repository = "mockito/mockito-release-tools-example"
    gh_user = "szczepiq"
    gh_readOnlyAuthToken = "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb"
    gh_writeAuthTokenEnvName = "GH_WRITE_TOKEN"

    releaseNotes_file = "docs/release-notes.md"
    releaseNotes_labelMapping = ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"]

    git_genericUser = "Mockito Release Tools"
    git_genericEmail = "<mockito.release.tools@gmail.com>"
    git_releasableBranchRegex = "master|release/.+"  // matches 'master', 'release/2.x', 'release/3.x', etc.

    //TODO this conditional logic needs to be removed from here
    // if 'bintray_notableRepo' not specified, we never release to notable repo
    // if specified, we automatically configure stuff by passing internal parameter to the build
    bintray_repo = project.hasProperty('bintray_repo')? project.bintray_repo : 'mockito-release-tools-example-repo'
    bintray_notableRepo = 'mockito-release-tools-example-repo-notable'

    pom_developers = ['szczepiq:Szczepan Faber']
    pom_contributors = ['mstachniuk:Marcin Stachniuk']
}

allprojects {
    plugins.withId("org.mockito.release-tools.bintray") {
        rootProject.bintrayUploadAll.dependsOn project.tasks.bintrayUpload
        bintray {
            pkg {
                user = 'szczepiq'
                userOrg = 'mockito'
                name = 'mockito-release-tools-example'
                licenses = ['MIT']
                labels = ['continuous delivery', 'release automation', 'mockito']
            }
        }
    }
}